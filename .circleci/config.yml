workflows:
  version: 2.1
  do-some-magic:
    jobs:
      - build
      - job2:
          requires:
            - build
      - job3:
          requires:
            - build
      - DATABASETest:
          requires:
           - build

version: 2.1
jobs:
  build:
    docker:
      - image: cimg/node:14.15.0 # the primary container, where your job's commands are run
        auth:
          username: $AUTH_DOCKER
          password: $PSW_DOCKER  # context / project UI env-var reference
          
    steps:
      - checkout # check out the code in the project directory
      - run: yarn install
      - save_cache: 
          key: npm-v1-dependencies-{{ checksum "yarn.lock" }}
          paths: 
           - node_modules

  job2:
    docker:
      - image: cimg/node:14.15.0 # the primary container, where your job's commands are run
        auth:
          username: $AUTH_DOCKER
          password: $PSW_DOCKER  # context / project UI env-var reference
    steps:
    - checkout
    - restore_cache: 
        key: npm-v1-dependencies-{{ checksum "yarn.lock" }}
    - run: yarn lint
    - run: yarn format:check

  job3:
    docker:
      - image: cimg/node:14.15.0 # the primary container, where your job's commands are run
        auth:
          username: $AUTH_DOCKER
          password: $PSW_DOCKER  # context / project UI env-var reference
    steps:
    - checkout
    - restore_cache: 
        key: npm-v1-dependencies-{{ checksum "yarn.lock" }}
    - run: yarn test
  
  #ne fonctionne mais vu en cour c'est ce que l'on attandais
  DATABASETest :
    docker:
      - image: cimg/node:14.15.0 # the primary container, where your job's commands are run
        auth:
          username: $AUTH_DOCKER
          password: $PSW_DOCKER  # context / project UI env-var reference
        environment:
            DATABASE_URL: postgres://root:test@localhost:5432/db

      - image: circleci/postgres:9.6.5-alpine-ram
        auth:
            username: $AUTH_DOCKER
            password: $PSW_DOCKER  # context / project UI env-var reference
        environment:
            POSTGRES_USER: root
            POSTGRES_DB: db
            POSTGRES_PASSWORD: test
    steps:
    - checkout
    - restore_cache: 
        key: npm-v1-dependencies-{{ checksum "yarn.lock" }}
    - run: yarn test:e2e
  
  DOCJob:
    docker:
      - image: cimg/node:14.15.0 # the primary container, where your job's commands are run
        auth:
          username: $AUTH_DOCKER
          password: $PSW_DOCKER  # context / project UI env-var reference
    steps:
    - checkout
    - restore_cache: 
        key: npm-v1-dependencies-{{ checksum "yarn.lock" }}
    - run: yarn doc:build
    - store_artifacts:
        path: 
        - .yarn/docs
        destination: yarn-docs